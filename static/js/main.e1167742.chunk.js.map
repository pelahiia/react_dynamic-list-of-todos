{"version":3,"sources":["types/TodoStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodosStatus","TodoList","todos","selectTodo","selectedTodoId","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","setQuery","setStatus","onChange","e","target","value","Active","Completed","All","placeholder","event","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","cancelSelectedTodo","useState","currentUser","setCurrentUser","useEffect","userId","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","status","todosFromServer","filteredTodos","filter","active","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1167742.chunk.js","sourcesContent":["export enum TodosStatus {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: (todo: Todo) => void,\n  selectedTodoId?: number,\n};\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n          className={classNames({\n            'has-background-info-light': selectedTodoId === todo.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              {\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                {selectedTodoId === todo.id\n                  ? (<i className=\"far fa-eye-slash\" />)\n                  : (<i className=\"far fa-eye\" />)}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { TodosStatus } from '../../types/TodoStatus';\n\ntype Props = {\n  query: string,\n  setQuery: (value: string) => void,\n  setStatus: React.Dispatch<React.SetStateAction<TodosStatus>>,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ query, setQuery, setStatus }) => {\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (e.target.value) {\n      case TodosStatus.Active:\n        setStatus(TodosStatus.Active);\n        break;\n\n      case TodosStatus.Completed:\n        setStatus(TodosStatus.Completed);\n        break;\n\n      default:\n        setStatus(TodosStatus.All);\n        break;\n    }\n  };\n\n  const handleSearch = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  cancelSelectedTodo: () => void,\n  todo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ cancelSelectedTodo, todo }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setCurrentUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={cancelSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed ? (\n                <strong className=\"has-text-danger\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodosStatus } from './types/TodoStatus';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState<TodosStatus>(TodosStatus.All);\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  const filteredTodos = todos.filter(todo => {\n    const active = (status === 'active') && (todo.completed);\n    const completed = (status === 'completed') && (!todo.completed);\n\n    if ((active)\n     || (completed)) {\n      return false;\n    }\n\n    return todo.title.toLowerCase().includes(query.toLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setStatus={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n\n              {!todos.length && <p>No toods found</p>}\n\n              {filteredTodos.length > 0 ? (\n                <TodoList\n                  todos={filteredTodos}\n                  selectTodo={setSelectedTodo}\n                  selectedTodoId={selectedTodo?.id}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo?.id && (\n        <TodoModal\n          cancelSelectedTodo={() => setSelectedTodo(null)}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}